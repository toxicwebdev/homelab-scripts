# Copyright (c) 2021-2025 tteck
# Author: tteck (tteckster)
# Co-Author: MickLesk
# License: MIT | https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/LICENSE

variables() {
  NSAPP=$(echo ${APP,,} | tr -d ' ') # This function sets the NSAPP variable by converting the value of the APP variable to lowercase and removing any spaces.
  var_install="${NSAPP}-install"     # sets the var_install variable by appending "-install" to the value of NSAPP.
  INTEGER='^[0-9]+([.][0-9]+)?$'     # it defines the INTEGER regular expression pattern.
  PVEHOST_NAME=$(hostname) # gets the Proxmox Hostname and sets it to Uppercase
}

# This function sets various color variables using ANSI escape codes for formatting text in the terminal.
color() {
  # Colors
  YW=$(echo "\033[33m")
  YWB=$(echo "\033[93m")
  BL=$(echo "\033[36m")
  RD=$(echo "\033[01;31m")
  BGN=$(echo "\033[4;92m")
  GN=$(echo "\033[1;92m")
  DGN=$(echo "\033[32m")

  # Formatting
  CL=$(echo "\033[m")
  UL=$(echo "\033[4m")
  BOLD=$(echo "\033[1m")
  BFR="\\r\\033[K"
  HOLD=" "
  TAB="  "

  # Icons
  CM="${TAB}‚úîÔ∏è${TAB}${CL}"
  CROSS="${TAB}‚úñÔ∏è${TAB}${CL}"
  INFO="${TAB}üí°${TAB}${CL}"
  OS="${TAB}üñ•Ô∏è${TAB}${CL}"
  OSVERSION="${TAB}üåü${TAB}${CL}"
  CONTAINERTYPE="${TAB}üì¶${TAB}${CL}"
  DISKSIZE="${TAB}üíæ${TAB}${CL}"
  CPUCORE="${TAB}üß†${TAB}${CL}"
  RAMSIZE="${TAB}üõ†Ô∏è${TAB}${CL}"
  SEARCH="${TAB}üîç${TAB}${CL}"
  VERIFYPW="${TAB}üîê${TAB}${CL}"
  CONTAINERID="${TAB}üÜî${TAB}${CL}"
  HOSTNAME="${TAB}üè†${TAB}${CL}"
  BRIDGE="${TAB}üåâ${TAB}${CL}"
  NETWORK="${TAB}üì°${TAB}${CL}"
  GATEWAY="${TAB}üåê${TAB}${CL}"
  DISABLEIPV6="${TAB}üö´${TAB}${CL}"
  DEFAULT="${TAB}‚öôÔ∏è${TAB}${CL}"
  MACADDRESS="${TAB}üîó${TAB}${CL}"
  VLANTAG="${TAB}üè∑Ô∏è${TAB}${CL}"
  ROOTSSH="${TAB}üîë${TAB}${CL}"
  CREATING="${TAB}üöÄ${TAB}${CL}"
  ADVANCED="${TAB}üß©${TAB}${CL}"
}

# This function enables error handling in the script by setting options and defining a trap for the ERR signal.
catch_errors() {
  set -Eeuo pipefail
  trap 'error_handler $LINENO "$BASH_COMMAND"' ERR
}

# This function is called when an error occurs. It receives the exit code, line number, and command that caused the error, and displays an error message.
error_handler() {
  if [ -n "$SPINNER_PID" ] && ps -p $SPINNER_PID > /dev/null; then kill $SPINNER_PID > /dev/null; fi
  printf "\e[?25h"
  local exit_code="$?"
  local line_number="$1"
  local command="$2"
  local error_message="${RD}[ERROR]${CL} in line ${RD}$line_number${CL}: exit code ${RD}$exit_code${CL}: while executing command ${YW}$command${CL}"
  echo -e "\n$error_message\n"
}

# This function displays a spinner.
spinner() {
  local frames=('‚†ã' '‚†ô' '‚†π' '‚†∏' '‚†º' '‚†¥' '‚†¶' '‚†ß' '‚†á' '‚†è')
  local spin_i=0
  local interval=0.1
  printf "\e[?25l"

  local color="${YWB}"

  while true; do
    printf "\r ${color}%s${CL}" "${frames[spin_i]}"
    spin_i=$(( (spin_i + 1) % ${#frames[@]} ))
    sleep "$interval"
  done
}

# This function displays an informational message with a yellow color.
msg_info() {
  local msg="$1"
  echo -ne "${TAB}${YW}${HOLD}${msg}${HOLD}"
  spinner &
  SPINNER_PID=$!
}

# This function displays a success message with a green color.
msg_ok() {
  if [ -n "$SPINNER_PID" ] && ps -p $SPINNER_PID > /dev/null; then kill $SPINNER_PID > /dev/null; fi
  printf "\e[?25h"
  local msg="$1"
  echo -e "${BFR}${CM}${GN}${msg}${CL}"
}

# This function displays a error message with a red color.
msg_error() {
  if [ -n "$SPINNER_PID" ] && ps -p $SPINNER_PID > /dev/null; then kill $SPINNER_PID > /dev/null; fi
  printf "\e[?25h"
  local msg="$1"
  echo -e "${BFR}${CROSS}${RD}${msg}${CL}"
}

# Check if the shell is using bash
shell_check() {
  if [[ "$(basename "$SHELL")" != "bash" ]]; then
    clear
    msg_error "–í–∞—à–∞ –∫–æ–Ω—Å–æ–ª—å(shell) –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞ Bash. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ Bash."
    echo -e "\n–í—ã—Ö–æ–∂—É..."
    sleep 2
    exit
  fi
}

# Run as root only
root_check() {
  if [[ "$(id -u)" -ne 0 || $(ps -o comm= -p $PPID) == "sudo" ]]; then
    clear
    msg_error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º root."
    echo -e "\n–í—ã—Ö–æ–∂—É..."
    sleep 2
    exit
  fi
}

# This function checks the version of Proxmox Virtual Environment (PVE) and exits if the version is not supported.
pve_check() {
  if ! pveversion | grep -Eq "pve-manager/8.[1-3]"; then
    msg_error "${CROSS}${RD}This version of Proxmox Virtual Environment is not supported"
    echo -e "–¢—Ä–µ–±—É–µ—Ç—Å—è Proxmox Virtual Environment –≤–µ—Ä—Å–∏–∏ 8.1 –∏ –≤—ã—à–µ."
    echo -e "Exiting..."
    sleep 2
    exit
fi
}

# This function checks the system architecture and exits if it's not "amd64".
arch_check() {
  if [ "$(dpkg --print-architecture)" != "amd64" ]; then
    echo -e "\n ${INFO}${YWB}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ PiMox! \n"
    echo -e "\n ${YWB}–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ê–†–ú64 - —á–∏—Ç–∞–π—Ç–µ https://github.com/asylumexp/Proxmox  \n"
    echo -e "Exiting..."
    sleep 2
    exit
  fi
}

# Function to get the current IP address based on the distribution
get_current_ip() {
  if [ -f /etc/os-release ]; then
    # Check for Debian/Ubuntu (uses hostname -I)
    if grep -qE 'ID=debian|ID=ubuntu' /etc/os-release; then
      CURRENT_IP=$(hostname -I | awk '{print $1}')
    # Check for Alpine (uses ip command)
    elif grep -q 'ID=alpine' /etc/os-release; then
      CURRENT_IP=$(ip -4 addr show eth0 | awk '/inet / {print $2}' | cut -d/ -f1 | head -n 1)
    else
      CURRENT_IP="Unknown"
    fi
  fi
  echo "$CURRENT_IP"
}

# Function to update the IP address in the MOTD file
update_motd_ip() {
  MOTD_FILE="/etc/motd"

  if [ -f "$MOTD_FILE" ]; then
    # Remove existing IP Address lines to prevent duplication
    sed -i '/IP Address:/d' "$MOTD_FILE"

    IP=$(get_current_ip)
    # Add the new IP address
    echo -e "${TAB}${NETWORK}${YW} IP Address: ${GN}${IP}${CL}" >> "$MOTD_FILE"
  fi
}

# This function sets the APP-Name into an ASCII Header in Slant, figlet needed on proxmox main node.
header_info() {
  # Helper function: Install FIGlet and download fonts
  install_figlet() {
    echo -e "${INFO}${BOLD}${DGN}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é FIGlet(–ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ—Ç–∏–ø–∞ –≤ –∫–æ–Ω—Å–æ–ª—å)...${CL}"

    temp_dir=$(mktemp -d)
    curl -sL https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/misc/figlet.tar.xz -o "$temp_dir/figlet.tar.xz"
    mkdir -p /tmp/figlet
    tar -xf "$temp_dir/figlet.tar.xz" -C /tmp/figlet --strip-components=1
    cd /tmp/figlet
    make >/dev/null

    if [ -f "figlet" ]; then
      chmod +x figlet
      mv figlet /usr/local/bin/
      mkdir -p /usr/local/share/figlet
      cp -r /tmp/figlet/fonts/*.flf /usr/local/share/figlet/
      echo -e "${CM}${BOLD}${DGN}FIGlet —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${CL}"
    else
      echo -e "${ERR}${BOLD}${RED}–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å FIGlet.${CL}"
      return 1
    fi
    rm -rf "$temp_dir"
  }

  # Check if figlet and the slant font are available
  if ! figlet -f slant "Test" &>/dev/null; then
    echo -e "${INFO}${BOLD}${DGN}–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —à—Ä–∏—Ñ—Ç—ã FIGlet or the slant font. –î–æ–±–∞–≤–ª—è—é...${CL}"

    if [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then
      # Debian/Ubuntu-based systems
      apt-get update -y &>/dev/null
      apt-get install -y wget build-essential &>/dev/null
      install_figlet

    elif [ -f /etc/alpine-release ]; then
      # Alpine-based systems
      apk add --no-cache tar xz build-base wget &>/dev/null
      export TERM=xterm
      install_figlet

    else
      echo -e "${ERR}${BOLD}${RED}–¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è!.${CL}"
      return 1
    fi

    # Ensure the slant font is available
    if [ ! -f "/usr/share/figlet/slant.flf" ]; then
      echo -e "${INFO}${BOLD}${DGN}–°–∫–∞—á–∏–≤–∞—é —à—Ä–∏—Ñ—Ç slant...${CL}"
      wget -qO /usr/share/figlet/slant.flf "http://www.figlet.org/fonts/slant.flf"
    fi
  fi

  # Display ASCII header
  term_width=$(tput cols 2>/dev/null || echo 120)
  ascii_art=$(figlet -f slant -w "$term_width" "$APP")
  clear
  echo "$ascii_art"
}

# This function checks if the script is running through SSH and prompts the user to confirm if they want to proceed or exit.
ssh_check() {
  if [ -n "${SSH_CLIENT:+x}" ]; then
    if whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --defaultno --title "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ SSH" --yesno "–ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å–æ–ª—å(shell) Proxmox –≤–º–µ—Å—Ç–æ SSH, —Ç.–∫. –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –æ—à–∏–±–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è SSH?" 10 72; then
      whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox --title "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ SSH" "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º. –ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –æ—à–∏–±–∫–∏ - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏(shell) Proxmox –ø—Ä–µ–∂–¥–µ, —á–µ–º –ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –æ –ø—Ä–æ–±–ª–µ–º–µ." 10 72
    else
      clear
      echo "–í—ã—Ö–æ–∂—É –≤ —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ SSH. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Proxmox shell."
      exit
    fi
  fi
}

base_settings() {
  # Default Settings
  CT_TYPE="1"
  DISK_SIZE="4"
  CORE_COUNT="1"
  RAM_SIZE="1024"
  VERBOSE="${1:-no}"
  PW=""
  CT_ID=$NEXTID
  HN=$NSAPP
  BRG="vmbr0"
  NET="dhcp"
  GATE=""
  APT_CACHER=""
  APT_CACHER_IP=""
  DISABLEIP6="no"
  MTU=""
  SD=""
  NS=""
  MAC=""
  VLAN=""
  SSH="no"
  TAGS="samohosting;"

  # Override default settings with variables from ct script
  CT_TYPE=${var_unprivileged:-$CT_TYPE}
  DISK_SIZE=${var_disk:-$DISK_SIZE}
  CORE_COUNT=${var_cpu:-$CORE_COUNT}
  RAM_SIZE=${var_ram:-$RAM_SIZE}
  VERB=${var_verbose:-$VERBOSE}
  TAGS="${TAGS}${var_tags:-}"

  # Since these 2 are only defined outside of default_settings function, we add a temporary fallback. TODO: To align everything, we should add these as constant variables (e.g. OSTYPE and OSVERSION), but that would currently require updating the default_settings function for all existing scripts
  if [ -z "$var_os" ]; then
    var_os="debian"
  fi
  if [ -z "$var_version" ]; then
    var_version="12"
  fi
}

# This function displays the default values for various settings.
echo_default() {
  # Convert CT_TYPE to description
  CT_TYPE_DESC="Unprivileged"
  if [ "$CT_TYPE" -eq 0 ]; then
    CT_TYPE_DESC="Privileged"
  fi

  # Output the selected values with icons
  echo -e "${OS}${BOLD}${DGN}–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: ${BGN}$var_os${CL}"
  echo -e "${OSVERSION}${BOLD}${DGN}–í–µ—Ä—Å–∏—è: ${BGN}$var_version${CL}"
  echo -e "${CONTAINERTYPE}${BOLD}${DGN}–¢–∏–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BGN}$CT_TYPE_DESC${CL}"
  echo -e "${DISKSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞: ${BGN}${DISK_SIZE}GB${CL}"
  echo -e "${CPUCORE}${BOLD}${DGN}–Ø–¥–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: ${BGN}${CORE_COUNT}${CL}"
  echo -e "${RAMSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –û–ó–£: ${BGN}${RAM_SIZE}MiB${CL}"
  echo -e "${CONTAINERID}${BOLD}${DGN}ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BGN}${CT_ID}${CL}"
  if [ "$VERB" == "yes" ]; then
    echo -e "${SEARCH}${BOLD}${DGN}–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: ${BGN}Enabled${CL}"
  fi
  echo -e "${CREATING}${BOLD}${BL}–°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º ${APP} –∏—Å–ø–æ–ª—å–∑—É—è –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏${CL}"
  echo -e "  "
}

# This function is called when the user decides to exit the script. It clears the screen and displays an exit message.
exit_script() {
  clear
  echo -e "\n${CROSS}${RD}–í—ã—Ö–æ–¥ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è${CL}\n"
  exit
}

# This function allows the user to configure advanced settings for the script.
advanced_settings() {
  whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox --title "–ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:" "–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ü–†–û–ë–ï–õ." 8 58
  whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox --title "–î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è $APP" "${var_os} ${var_version} \n \nIf –∏—Å–ø–æ–ª—å–∑—É–µ–º–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–≥–æ , –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞. \n" 10 58
  if [ "$var_os" != "alpine" ]; then
    var_os=""
    while [ -z "$var_os" ]; do
      if var_os=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–î–ò–°–¢–†–ò–ë–£–¢–ò–í" --radiolist "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ :" 10 58 2 \
        "debian" "" OFF \
        "ubuntu" "" OFF \
        3>&1 1>&2 2>&3); then
        if [ -n "$var_os" ]; then
          echo -e "${OS}${BOLD}${DGN}–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: ${BGN}$var_os${CL}"
        fi
      else
        exit_script
      fi
    done
  fi

  if [ "$var_os" == "debian" ]; then
    var_version=""
    while [ -z "$var_version" ]; do
      if var_version=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–í–ï–†–°–ò–Ø DEBIAN" --radiolist "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é" 10 58 2 \
        "11" "Bullseye" OFF \
        "12" "Bookworm" OFF \
        3>&1 1>&2 2>&3); then
        if [ -n "$var_version" ]; then
          echo -e "${OSVERSION}${BOLD}${DGN}–í–µ—Ä—Å–∏—è: ${BGN}$var_version${CL}"
        fi
      else
        exit_script
      fi
    done
  fi

  if [ "$var_os" == "ubuntu" ]; then
    var_version=""
    while [ -z "$var_version" ]; do
      if var_version=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–í–ï–†–°–ò–Ø UBUNTU" --radiolist "–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é" 10 58 4 \
        "20.04" "Focal" OFF \
        "22.04" "Jammy" OFF \
        "24.04" "Noble" OFF \
        "24.10" "Oracular" OFF \
      3>&1 1>&2 2>&3); then
        if [ -n "$var_version" ]; then
          echo -e "${OSVERSION}${BOLD}${DGN}–í–µ—Ä—Å–∏—è: ${BGN}$var_version${CL}"
        fi
      else
        exit_script
      fi
    done
  fi
  # Setting Default Tag for Advanced Settings
  TAGS="samohosting;${var_tags:-}"

  CT_TYPE=""
  while [ -z "$CT_TYPE" ]; do
    if CT_TYPE=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–¢–ò–ü –ö–û–ù–¢–ï–ô–ù–ï–†–ê" --radiolist "–í—ã–±–µ—Ä–∏—Ç–µ –¢–∏–ø" 10 58 2 \
      "1" "Unprivileged" OFF \
      "0" "Privileged" OFF \
      3>&1 1>&2 2>&3); then
      if [ -n "$CT_TYPE" ]; then
        CT_TYPE_DESC="Unprivileged"
        if [ "$CT_TYPE" -eq 0 ]; then
          CT_TYPE_DESC="Privileged"
        fi
        echo -e "${CONTAINERTYPE}${BOLD}${DGN}–¢–∏–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BGN}$CT_TYPE_DESC${CL}"
      fi
    else
      exit_script
    fi
  done

  while true; do
    if PW1=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --passwordbox "\n–ó–∞–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è root (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è root ssh –¥–æ—Å—Ç—É–ø–∞)" 9 58 --title "–ü–ê–†–û–õ–¨ (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞)" 3>&1 1>&2 2>&3); then
      if [[ ! -z "$PW1" ]]; then
        if [[ "$PW1" == *" "* ]]; then
          whiptail --msgbox "–ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." 8 58
        elif [ ${#PW1} -lt 5 ]; then
          whiptail --msgbox "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è = 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." 8 58
        else
          if PW2=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --passwordbox "\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å—è –¥–ª—è root" 9 58 --title "–ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ü–ê–†–û–õ–Ø" 3>&1 1>&2 2>&3); then
            if [[ "$PW1" == "$PW2" ]]; then
              PW="-password $PW1"
              echo -e "${VERIFYPW}${BOLD}${DGN}–ü–ê–†–û–õ–¨ –î–õ–Ø ROOT: ${BGN}********${CL}"
              break
            else
              whiptail --msgbox "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." 8 58
            fi
          else
            exit_script
          fi
        fi
      else
        PW1="Automatic Login"
        PW=""
        echo -e "${VERIFYPW}${BOLD}${DGN}–ü–ê–†–û–õ–¨ –î–õ–Ø ROOT: ${BGN}$PW1${CL}"
        break
      fi
    else
      exit_script
    fi
  done


  if CT_ID=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞" 8 58 $NEXTID --title "ID –ö–û–ù–¢–ï–ô–ù–ï–†–ê" 3>&1 1>&2 2>&3); then
    if [ -z "$CT_ID" ]; then
      CT_ID="$NEXTID"
      echo -e "${CONTAINERID}${BOLD}${DGN}ID LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BGN}$CT_ID${CL}"
    else
      echo -e "${CONTAINERID}${BOLD}${DGN}ID LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${BGN}$CT_ID${CL}"
    fi
  else
    exit
  fi

  if CT_NAME=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ –∏–º—è —Ö–æ—Å—Ç–∞(hostname)" 8 58 $NSAPP --title "–ò–ú–Ø –•–û–°–¢–ê(HOSTNAME)" 3>&1 1>&2 2>&3); then
    if [ -z "$CT_NAME" ]; then
      HN="$NSAPP"
    else
      HN=$(echo ${CT_NAME,,} | tr -d ' ')
    fi
    echo -e "${HOSTNAME}${BOLD}${DGN}–ò–º—è —Ö–æ—Å—Ç–∞(hostname): ${BGN}$HN${CL}"
  else
    exit_script
  fi

  if DISK_SIZE=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞ –≤ GB" 8 58 $var_disk --title "–†–ê–ó–ú–ï–† –î–ò–°–ö–ê" 3>&1 1>&2 2>&3); then
    if [ -z "$DISK_SIZE" ]; then
      DISK_SIZE="$var_disk"
      echo -e "${DISKSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞: ${BGN}${DISK_SIZE}GB${CL}"
    else
      if ! [[ $DISK_SIZE =~ $INTEGER ]]; then
        echo -e "{INFO}${HOLD}${RD} –†–ê–ó–ú–ï–† –î–ò–°–ö–ê –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –£–ö–ê–ó–ê–ù –ß–ò–°–õ–û–ú!${CL}"
        advanced_settings
      fi
      echo -e "${DISKSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞: ${BGN}${DISK_SIZE}GB${CL}"
    fi
  else
    exit_script
  fi

  if CORE_COUNT=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã—Ö —è–¥–µ—Ä(CPU count)" 8 58 $var_cpu --title "–ö–û–õ–ò–ß–ï–°–¢–í–û –ü–†–û–¶–ï–°–°–û–†–ù–´–• –Ø–î–ï–†(CPU COUNT)" 3>&1 1>&2 2>&3); then
    if [ -z "$CORE_COUNT" ]; then
      CORE_COUNT="$var_cpu"
      echo -e "${CPUCORE}${BOLD}${DGN}–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã—Ö —è–¥–µ—Ä: ${BGN}$CORE_COUNT${CL}"
    else
      echo -e "${CPUCORE}${BOLD}${DGN}–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã—Ö —è–¥–µ—Ä: ${BGN}$CORE_COUNT${CL}"
    fi
  else
    exit_script
  fi

  if RAM_SIZE=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ –û–ó–£ –≤ MiB" 8 58 $var_ram --title "–û–ó–£" 3>&1 1>&2 2>&3); then
    if [ -z "$RAM_SIZE" ]; then
      RAM_SIZE="$var_ram"
      echo -e "${RAMSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –û–ó–£: ${BGN}${RAM_SIZE}MiB${CL}"
    else
      echo -e "${RAMSIZE}${BOLD}${DGN}–†–∞–∑–º–µ—Ä –û–ó–£: ${BGN}${RAM_SIZE}MiB${CL}"
    fi
  else
    exit_script
  fi

  if BRG=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ —Å–µ—Ç–µ–≤–æ–π –º–æ—Å—Ç(bridge)" 8 58 vmbr0 --title "–°–ï–¢–ï–í–û–ô –ú–û–°–¢(BRIDGE)" 3>&1 1>&2 2>&3); then
    if [ -z "$BRG" ]; then
      BRG="vmbr0"
      echo -e "${BRIDGE}${BOLD}${DGN}–°–µ—Ç–µ–≤–æ–π –º–æ—Å—Ç(bridge): ${BGN}$BRG${CL}"
    else
      echo -e "${BRIDGE}${BOLD}${DGN}–°–µ—Ç–µ–≤–æ–π –º–æ—Å—Ç(bridge): ${BGN}$BRG${CL}"
    fi
  else
    exit_script
  fi

  while true; do
    NET=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–π IPv4 CIDR –∞–¥—Ä–µ—Å (/24)" 8 58 dhcp --title "IP –ê–î–†–ï–°" 3>&1 1>&2 2>&3)
    exit_status=$?
    if [ $exit_status -eq 0 ]; then
      if [ "$NET" = "dhcp" ]; then
        echo -e "${NETWORK}${BOLD}${DGN}IP –∞–¥—Ä–µ—Å: ${BGN}$NET${CL}"
        break
      else
        if [[ "$NET" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$ ]]; then
          echo -e "${NETWORK}${BOLD}${DGN}IP –∞–¥—Ä–µ—Å: ${BGN}$NET${CL}"
          break
        else
          whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox "$NET is an invalid IPv4 CIDR address. Please enter a valid IPv4 CIDR address or 'dhcp'" 8 58
        fi
      fi
    else
      exit_script
    fi
  done

  if [ "$NET" != "dhcp" ]; then
    while true; do
      GATE1=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ IP –∞–¥—Ä–µ—Å —à–ª—é–∑–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é(gateway)" 8 58 --title "IP –ê–î–†–ï–° –®–õ–Æ–ó–ê(Gateway IP)" 3>&1 1>&2 2>&3)
      if [ -z "$GATE1" ]; then
        whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox "–ü–æ–ª–µ IP —à–ª—é–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" 8 58
      elif [[ ! "$GATE1" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
        whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --msgbox "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP –∞–¥—Ä–µ—Å–∞" 8 58
      else
        GATE=",gw=$GATE1"
        echo -e "${GATEWAY}${BOLD}${DGN}IP –®–ª—é–∑–∞(Gateway IP): ${BGN}$GATE1${CL}"
        break
      fi
    done
  else
    GATE=""
    echo -e "${GATEWAY}${BOLD}${DGN}IP –®–ª—é–∑–∞(Gateway IP): ${BGN}Default${CL}"
  fi

  if [ "$var_os" == "alpine" ]; then
    APT_CACHER=""
    APT_CACHER_IP=""
  else
    if APT_CACHER_IP=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ IP –∞–¥—Ä–µ—Å –∫–µ—à–∏—Ä—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä(APT-Cacher) (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" 8 58 --title "IP –ö–ï–®–ò–†–£–Æ–©–ï–ì–û –ü–†–û–ö–°–ò-–°–ï–†–í–ï–†–ê(APT-Cacher)" 3>&1 1>&2 2>&3); then
      APT_CACHER="${APT_CACHER_IP:+yes}"
      echo -e "${NETWORK}${BOLD}${DGN}IP –∞–¥—Ä–µ—Å –∫–µ—à–∏—Ä—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä(APT-Cacher): ${BGN}${APT_CACHER_IP:-Default}${CL}"
    else
      exit_script
    fi
  fi

  if (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --defaultno --title "IPv6" --yesno "–û—Ç–∫–ª—é—á–∏—Ç—å IPv6?" 10 58); then
    DISABLEIP6="yes"
  else
    DISABLEIP6="no"
  fi
  echo -e "${DISABLEIPV6}${BOLD}${DGN}–û—Ç–∫–ª—é—á–∏—Ç—å IPv6: ${BGN}$DISABLEIP6${CL}"

  if MTU1=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "Set Interface MTU Size (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" 8 58 --title "MTU SIZE" 3>&1 1>&2 2>&3); then
    if [ -z $MTU1 ]; then
      MTU1="Default"
      MTU=""
    else
      MTU=",mtu=$MTU1"
    fi
    echo -e "${DEFAULT}${BOLD}${DGN}Interface MTU Size: ${BGN}$MTU1${CL}"
  else
    exit_script
  fi

  if SD=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "Set a DNS –î–æ–º–µ–Ω –ø–æ–∏—Å–∫–∞(–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HOST)" 8 58 --title "DNS –î–æ–º–µ–Ω –ø–æ–∏—Å–∫–∞" 3>&1 1>&2 2>&3); then
    if [ -z $SD ]; then
      SX=Host
      SD=""
    else
      SX=$SD
      SD="-searchdomain=$SD"
    fi
    echo -e "${SEARCH}${BOLD}${DGN}DNS –î–æ–º–µ–Ω –ø–æ–∏—Å–∫–∞: ${BGN}$SX${CL}"
  else
    exit_script
  fi

  if NX=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ IP –∞–¥—Ä–µ—Å DNS —Å–µ—Ä–≤–µ—Ä–∞ (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HOST)" 8 58 --title "IP –ê–î–†–ï–° DNS –°–ï–†–í–ï–†–ê" 3>&1 1>&2 2>&3); then
    if [ -z $NX ]; then
      NX=Host
      NS=""
    else
      NS="-nameserver=$NX"
    fi
    echo -e "${NETWORK}${BOLD}${DGN}IP –∞–¥—Ä–µ—Å DNS —Å–µ—Ä–≤–µ—Ä–∞: ${BGN}$NX${CL}"
  else
    exit_script
  fi

  if MAC1=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ MAC –∞–¥—Ä–µ—Å(–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" 8 58 --title "MAC –ê–î–†–ï–°" 3>&1 1>&2 2>&3); then
    if [ -z $MAC1 ]; then
      MAC1="Default"
      MAC=""
    else
      MAC=",hwaddr=$MAC1"
      echo -e "${MACADDRESS}${BOLD}${DGN}MAC –∞–¥—Ä–µ—Å: ${BGN}$MAC1${CL}"
    fi
  else
    exit_script
  fi

  if VLAN1=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "–£–∫–∞–∂–∏—Ç–µ Vlan(–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)" 8 58 --title "VLAN" 3>&1 1>&2 2>&3); then
    if [ -z $VLAN1 ]; then
      VLAN1="Default"
      VLAN=""
    else
      VLAN=",tag=$VLAN1"
    fi
    echo -e "${VLANTAG}${BOLD}${DGN}Vlan: ${BGN}$VLAN1${CL}"
  else
    exit_script
  fi

  if ADV_TAGS=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --inputbox "Set Custom Tags?[If you remove all, there will be no tags!]" 8 58 ${TAGS} --title "Advanced Tags" 3>&1 1>&2 2>&3); then
    if [ -n "${ADV_TAGS}" ]; then
        ADV_TAGS=${ADV_TAGS:-""}
        ADV_TAGS=$(echo "$ADV_TAGS" | tr -d '[:space:]')
        TAGS="community-script;${ADV_TAGS}"
    fi
      echo -e "${NETWORK}${BOLD}${DGN}Tags: ${BGN}$TAGS${CL}"
    else
      exit_script
  fi

  if [[ "$PW" == -password* ]]; then
    if (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --defaultno --title "SSH –î–û–°–¢–£–ü" --yesno "–†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø Root –ø–æ SSH?" 10 58); then
      SSH="yes"
    else
      SSH="no"
    fi
    echo -e "${ROOTSSH}${BOLD}${DGN}–î–æ—Å—Ç—É–ø Root –ø–æ SSH: ${BGN}$SSH${CL}"
  else
    SSH="no"
    echo -e "${ROOTSSH}${BOLD}${DGN}–î–æ—Å—Ç—É–ø Root –ø–æ SSH: ${BGN}$SSH${CL}"
  fi

  if (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --defaultno --title "–†–ï–ñ–ò–ú –û–¢–õ–ê–î–ö–ò" --yesno "–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏?(–≤–∏–¥–Ω–æ –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π, –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫)" 10 58); then
    VERB="yes"
  else
    VERB="no"
  fi
  echo -e "${SEARCH}${BOLD}${DGN}Verbose Mode: ${BGN}$VERB${CL}"

  if (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–†–ê–°–®–ò–†–ï–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ó–ê–í–ï–†–®–ï–ù–´" --yesno "–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–∏—é ${APP} LXC?" 10 58); then
    echo -e "${CREATING}${BOLD}${RD}–°–æ–∑–¥–∞—é ${APP} LXC –∏—Å–ø–æ–ª—å–∑—É—è –≤—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏${CL}"
  else
    clear
    header_info
    echo -e "${ADVANCED}${BOLD}${RD}–ò—Å–ø–æ–ª—å–∑—É—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è node $PVEHOST_NAME${CL}"
    advanced_settings
  fi
}

install_script() {
  pve_check
  shell_check
  root_check
  arch_check
  ssh_check

  if systemctl is-active -q ping-instances.service; then
    systemctl -q stop ping-instances.service
  fi
  NEXTID=$(pvesh get /cluster/nextid)
  timezone=$(cat /etc/timezone)
  header_info
  while true; do
    CHOICE=$(whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–ù–ê–°–¢–†–û–ô–ö–ò" --menu "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:" \
      12 50 4 \
      "1" "–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é" \
      "2" "–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é(—Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏)" \
      "3" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" \
      "4" "–í—ã—Ö–æ–¥" --nocancel --default-item "1" 3>&1 1>&2 2>&3)

    if [ $? -ne 0 ]; then
      echo -e "${CROSS}${RD} –î–µ–π—Å—Ç–≤–∏–µ(–º–µ–Ω—é) –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã—Ö–æ–∂—É.${CL}"
      exit 0
    fi

    case $CHOICE in
      1)
        header_info
        echo -e "${DEFAULT}${BOLD}${BL}–ò—Å–ø–æ–ª—å–∑—É—é –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è node $PVEHOST_NAME${CL}"
        VERB="no"
        base_settings "$VERB"
        echo_default
        break
        ;;
      2)
        header_info
        echo -e "${DEFAULT}${BOLD}${BL}–ò—Å–ø–æ–ª—å–∑—É—é –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è node $PVEHOST_NAME (${SEARCH}${BL}Verbose)${CL}"
        VERB="yes"
        base_settings "$VERB"
        echo_default
        break
        ;;
      3)
        header_info
        echo -e "${ADVANCED}${BOLD}${RD}–ò—Å–ø–æ–ª—å–∑—É—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è node $PVEHOST_NAME${CL}"
        advanced_settings
        break
        ;;
      4)
        echo -e "${CROSS}${RD}–í—ã—Ö–æ–∂—É.${CL}"
        exit 0
        ;;
      *)
        echo -e "${CROSS}${RD}–ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${CL}"
        ;;
    esac
  done
}

check_container_resources() {
  # Check actual RAM & Cores
  current_ram=$(free -m | awk 'NR==2{print $2}')
  current_cpu=$(nproc)

  # Check whether the current RAM is less than the required RAM or the CPU cores are less than required
  if [[ "$current_ram" -lt "$var_ram" ]] || [[ "$current_cpu" -lt "$var_cpu" ]]; then
    echo -e "\n${INFO}${HOLD} ${GN}–¢—Ä–µ–±—É–µ—Ç—Å—è: ${var_cpu} CPU, ${var_ram}MB –û–ó–£ ${CL}| ${RD}–î–æ—Å—Ç—É–ø–Ω–æ —Å–µ–π—á–∞—Å: ${current_cpu} CPU, ${current_ram}MB –û–ó–£${CL}"
    echo -e "${YWB}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ${APP} LXC —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω —Ö–æ—Ç—è –±—ã —Å ${var_cpu} vCPU –∏ ${var_ram} MB –û–ó–£ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∫–∏—É—Å—Ç–∞–Ω–æ–≤–∫–∏.${CL}\n"
    read -r -p "${INFO}${HOLD}–ú–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö! ${INFO} –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–≤–æ–ª–µ–Ω–∏–µ LXC —Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã? <yes/No>  " prompt
    # Check if the input is 'yes', otherwise exit with status 1
    if [[ ! ${prompt,,} =~ ^(yes)$ ]]; then
      echo -e "${CROSS}${HOLD} ${YWB}–í—ã—Ö–æ–∂—É –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.${CL}"
      exit 1
    fi
  else
    echo -e ""
  fi
}

check_container_storage() {
  # Check if the /boot partition is more than 80% full
  total_size=$(df /boot --output=size | tail -n 1)
  local used_size=$(df /boot --output=used | tail -n 1)
  usage=$(( 100 * used_size / total_size ))
  if (( usage > 80 )); then
    # Prompt the user for confirmation to continue
    echo -e "${INFO}${HOLD} ${YWB}–í–ù–ò–ú–ê–ù–ò–ï!: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (${usage}%).${CL}"
    read -r -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ? <y/N>  " prompt
    # Check if the input is 'y' or 'yes', otherwise exit with status 1
    if [[ ! ${prompt,,} =~ ^(y|yes)$ ]]; then
      echo -e "${CROSS}${HOLD}${YWB}–í—ã—Ö–æ–∂—É –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.${CL}"
      exit 1
    fi
  fi
}

start() {
  if command -v pveversion >/dev/null 2>&1; then
    if ! (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "${APP} LXC" --yesno "–ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ${APP}?             (–Ω–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ\—É—Ö–æ–¥–∏—Ç–µ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏)   –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞?" 10 58); then
      clear
      exit_script
      exit
    fi
    SPINNER_PID=""
    install_script
  fi

  if ! command -v pveversion >/dev/null 2>&1; then
    if ! (whiptail --backtitle "Proxmox VE Helper Scripts: ToxicWeb Edition v0.1.0" --title "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê ${APP}" --yesno "–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ—Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è  ${APP} LXC.  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?" 10 58); then
      clear
      exit_script
      exit
    fi
    SPINNER_PID=""
    update_script
  fi
}

# This function collects user settings and integrates all the collected information.
build_container() {
#  if [ "$VERB" == "yes" ]; then set -x; fi

  if [ "$CT_TYPE" == "1" ]; then
    FEATURES="keyctl=1,nesting=1"
  else
    FEATURES="nesting=1"
  fi


  TEMP_DIR=$(mktemp -d)
  pushd $TEMP_DIR >/dev/null
  if [ "$var_os" == "alpine" ]; then
    export FUNCTIONS_FILE_PATH="$(curl -s https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/misc/alpine-install.func)"
  else
    export FUNCTIONS_FILE_PATH="$(curl -s https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/misc/install.func)"
  fi
  export CACHER="$APT_CACHER"
  export CACHER_IP="$APT_CACHER_IP"
  export tz="$timezone"
  export DISABLEIPV6="$DISABLEIP6"
  export APPLICATION="$APP"
  export app="$NSAPP"
  export PASSWORD="$PW"
  export VERBOSE="$VERB"
  export SSH_ROOT="${SSH}"
  export CTID="$CT_ID"
  export CTTYPE="$CT_TYPE"
  export PCT_OSTYPE="$var_os"
  export PCT_OSVERSION="$var_version"
  export PCT_DISK_SIZE="$DISK_SIZE"
  export PCT_OPTIONS="
    -features $FEATURES
    -hostname $HN
    -tags $TAGS
    $SD
    $NS
    -net0 name=eth0,bridge=$BRG$MAC,ip=$NET$GATE$VLAN$MTU
    -onboot 1
    -cores $CORE_COUNT
    -memory $RAM_SIZE
    -unprivileged $CT_TYPE
    $PW
  "
  # This executes create_lxc.sh and creates the container and .conf file
  bash -c "$(wget -qLO - https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/ct/create_lxc.sh)" || exit

  LXC_CONFIG=/etc/pve/lxc/${CTID}.conf
  if [ "$CT_TYPE" == "0" ]; then
    cat <<EOF >>$LXC_CONFIG
# USB passthrough
lxc.cgroup2.devices.allow: a
lxc.cap.drop:
lxc.cgroup2.devices.allow: c 188:* rwm
lxc.cgroup2.devices.allow: c 189:* rwm
lxc.mount.entry: /dev/serial/by-id  dev/serial/by-id  none bind,optional,create=dir
lxc.mount.entry: /dev/ttyUSB0       dev/ttyUSB0       none bind,optional,create=file
lxc.mount.entry: /dev/ttyUSB1       dev/ttyUSB1       none bind,optional,create=file
lxc.mount.entry: /dev/ttyACM0       dev/ttyACM0       none bind,optional,create=file
lxc.mount.entry: /dev/ttyACM1       dev/ttyACM1       none bind,optional,create=file
EOF
  fi

  if [ "$CT_TYPE" == "0" ]; then
    if [[ "$APP" == "Channels" || "$APP" == "Emby" || "$APP" == "ErsatzTV" || "$APP" == "Frigate" || "$APP" == "Jellyfin" || "$APP" == "Plex" || "$APP" == "Scrypted" || "$APP" == "Tdarr" || "$APP" == "Unmanic" || "$APP" == "Ollama" ]]; then
      cat <<EOF >>$LXC_CONFIG
# VAAPI hardware transcoding
lxc.cgroup2.devices.allow: c 226:0 rwm
lxc.cgroup2.devices.allow: c 226:128 rwm
lxc.cgroup2.devices.allow: c 29:0 rwm
lxc.mount.entry: /dev/fb0 dev/fb0 none bind,optional,create=file
lxc.mount.entry: /dev/dri dev/dri none bind,optional,create=dir
lxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create=file
EOF
    fi
  else
    if [[ "$APP" == "Channels" || "$APP" == "Emby" || "$APP" == "ErsatzTV" || "$APP" == "Frigate" || "$APP" == "Jellyfin" || "$APP" == "Plex" || "$APP" == "Scrypted" || "$APP" == "Tdarr" || "$APP" == "Unmanic" || "$APP" == "Ollama" ]]; then
      if [[ -e "/dev/dri/renderD128" ]]; then
        if [[ -e "/dev/dri/card0" ]]; then
          cat <<EOF >>$LXC_CONFIG
# VAAPI hardware transcoding
dev0: /dev/dri/card0,gid=44
dev1: /dev/dri/renderD128,gid=104
EOF
        else
          cat <<EOF >>$LXC_CONFIG
# VAAPI hardware transcoding
dev0: /dev/dri/card1,gid=44
dev1: /dev/dri/renderD128,gid=104
EOF
        fi
      fi
    fi
  fi

  # This starts the container and executes <app>-install.sh
  msg_info "–ó–∞–ø—É—Å–∫–∞—é LXC Container"
  pct start "$CTID"
  msg_ok "–ó–∞–ø—É—Å—Ç–∏–ª LXC Container"
  if [ "$var_os" == "alpine" ]; then
    sleep 3
        pct exec "$CTID" -- /bin/sh -c 'cat <<EOF >/etc/apk/repositories
http://dl-cdn.alpinelinux.org/alpine/latest-stable/main
http://dl-cdn.alpinelinux.org/alpine/latest-stable/community
EOF'
    pct exec "$CTID" -- ash -c "apk add bash >/dev/null"
  fi
  lxc-attach -n "$CTID" -- bash -c "$(wget -qLO - https://raw.githubusercontent.com/toxicwebdev/homelab-scripts/main/install/$var_install.sh)" || exit

}

# This function sets the description of the container.
description() {
  IP=$(pct exec "$CTID" ip a s dev eth0 | awk '/inet / {print $2}' | cut -d/ -f1)

  # Generate LXC Description
  DESCRIPTION=$(cat <<EOF
<div align='center'>
  <a href='https://github.com/toxicwebdev' target='_blank' rel='noopener noreferrer'>
    <img src='https://github.com/toxicwebdev/toxicblue/blob/main/assets/toxic.png' alt='Logo' style='width:81px;height:112px;'/>
  </a>

  <h2 style='font-size: 24px; margin: 20px 0;'>${APP} LXC</h2>


  <span style='margin: 0 10px;'>
    <i class="fa fa-telegram fa-fw" style="color: #f5f5f5;"></i>
    <a href='https://t.me/toxicweb' target='_blank' rel='noopener noreferrer' style='text-decoration: none; color: #0088cc;'>Telegram</a>
  </span>
</div>
EOF
)

  # Set Description in LXC
  pct set "$CTID" -description "$DESCRIPTION"

  if [[ -f /etc/systemd/system/ping-instances.service ]]; then
    systemctl start ping-instances.service
  fi
}
